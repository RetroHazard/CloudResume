name: Deploy React App to S3 (Staging)

defaults: 
  run:
    working-directory: website

on:
  push:
    paths:
      - 'website/**'
    tags:
      - 'devbuild-*'
  workflow_run:
    workflows: [ "Terraform Deploy" ]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check last Terraform Deploy run status
        id: check_status
        run: |
          status=$(gh run list --workflow="Terraform Deploy" --branch=main --limit=1 --json conclusion --jq '.[0].conclusion')
          echo "status=$status" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check status output
        run:
          echo "Last Terraform Deploy status was ${{ env.status }}"

      - name: Build and Upload
        if: ${{ env.status == 'success' }}
        run: |
          echo "Running Build and Upload because last Terraform Deploy was successful"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: 'Create env file'
        run: |
          touch .env
          echo REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }} >> .env
          echo REACT_APP_AWS_API_ENDPOINT=${{ secrets.AWS_API_ENDPOINT }} >> .env

      - name: Test app
        run: npm run test

      - name: Build
        run: npm run build-dev

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        env:
          SOURCE_DIR: website/build/dev/
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_STAGE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}