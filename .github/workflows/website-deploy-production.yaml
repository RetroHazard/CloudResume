name: Deploy React App to S3 (Production)

defaults: 
  run:
    working-directory: website

on:
  push:
    paths:
      - 'website/**'
    tags:
      - 'release-*'
  workflow_run:
    workflows: [ "Terraform Deploy", "Website Tests" ]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check last Terraform Deploy run status
        id: check_tf_status
        run: |
          tf_status=$(gh run list --workflow="Terraform Deploy" --branch=main --limit=1 --json conclusion --jq '.[0].conclusion')
          echo "tf_status=$tf_status" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check last Website Tests run status
        id: check_test_status
        run: |
          test_status=$(gh run list --workflow="Website Tests" --branch=main --limit=1 --json conclusion --jq '.[0].conclusion')
          echo "test_status=$test_status" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check status outputs
        run: |
          echo "Last Terraform Deploy status was ${{ env.tf_status }}"
          echo "Last Website Tests status was ${{ env.test_status }}"

      - name: Build and Upload
        if: ${{ env.tf_status == 'success' && env.test_status == 'success' }}
        run: |
          echo "Running Build and Upload because last Terraform Deploy and Website Tests were successful"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: 'Create env file'
        run: |
          touch .env
          echo REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }} >> .env
          echo REACT_APP_AWS_API_ENDPOINT=${{ secrets.AWS_API_ENDPOINT }} >> .env

      - name: Test app
        run: npm run test

      - name: Build
        run: npm run build-prod

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        env:
          SOURCE_DIR: website/build/prod/
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_PROD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}