name: Terraform - Detect Drift

defaults:
  run:
    working-directory: infrastructure

on: workflow_dispatch

env:
  GITHUB_TOKEN: ${{ secrets.PAT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TF_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TF_SECRET_ACCESS_KEY }}
  TF_VAR_github_token: ${{ secrets.PAT }}
  TF_VAR_aws_access_key_id: ${{ secrets.AWS_TF_ACCESS_KEY }}
  TF_VAR_aws_secret_access_key: ${{ secrets.AWS_TF_SECRET_ACCESS_KEY }}
  TF_VAR_assume_role_target: ${{ secrets.AWS_TF_ASSUME_ROLE_TARGET }}
  TF_VAR_deployment_region: ${{ vars.AWS_TF_DEPLOYMENT_REGION }}
  TF_VAR_domain_name: ${{ vars.AWS_TF_DOMAIN_NAME }}
  TF_VAR_sanitized_domain_name: ${{ vars.AWS_TF_SANITIZED_DOMAIN_NAME }}
  TF_VAR_api_current_stage: ${{ vars.AWS_TF_API_CURRENT_STAGE }}

jobs:
  validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Initialize
        run: terraform init

      - name: Validate Configuration
        run: terraform validate

  planning:
    runs-on: ubuntu-latest
    needs: validation
    permissions: write-all

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
          terraform_wrapper: true

      - name: Terraform Init
        id: initialize
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false